services:
  zookeeper:
    image: docker.io/bitnami/zookeeper:3.9
    container_name: zookeeper
    restart: always
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    volumes:
      - zookeeper_data:/bitnami
    networks:
      - mydockernetwork
    healthcheck:
      test: ["CMD", "bash", "-lc", "echo ruok | nc -w 2 127.0.0.1 2181 | grep imok"]
      interval: 10s
      timeout: 3s
      retries: 10

  kafka:
    image: docker.io/bitnami/kafka:3.5
    container_name: kafka
    hostname: kafka              # allinea il nome host con l'advertised listener
    restart: always
    ports:
      - "9093:9093"              # porta per i client sull'host
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes

      # Listener interno (rete Docker) ed esterno (host)
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,PLAINTEXT_HOST://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=PLAINTEXT

      # opzionale
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
    volumes:
      - kafka_data:/bitnami
    depends_on:
      - zookeeper
    networks:
      - mydockernetwork
    healthcheck:
      test: ["CMD", "bash", "-lc", "echo > /dev/tcp/127.0.0.1/9092"]
      interval: 10s
      timeout: 3s
      retries: 10

volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local

networks:
  mydockernetwork:
    external: true
    name: mydockernetwork
